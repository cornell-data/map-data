processCategorical(survdata$q5[1])
names
processCategorical(survdata$q5[1], names)
survdata$q5[1]
?split
?strsplit
strsplit(survdata$q5[1], ", ", fixed=T)
unlist(strsplit(survdata$q5[1], ", ", fixed=T))
unbunch = function(item, delim, fixed=T) {
return(
unlist(
strsplit(
item, delim, fixed
)
)
)
}
unbunch(survdata$q5[1])
unbunch(survdata$q5[1], ", ")
processed = survdata$q5 %>%
flatmap(function(item) ubunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
processed = survdata$q5 %>%
flatmap(function(item) unbunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
head(processed)
length(survdata$q5)
length(processed)
names = c("Email/Password", "Personally Uploaded Pictures", "Pictures Uploaded by Friends", "Location During Use", "Location While Running in Background", "Personal Usage Trends Used by Company Itself", "Personal Usage Trends Sold to Third Parties", "All Cookies Stored on Computer", "Recently Visited Sites (Browser History)", "Other")
processed = survdata$q5 %>%
flatmap(function(item) unbunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
values = table(processed)
values
barplot(
values, col="dodgerblue3", ylab="Frequency", names.arg = names
)
title("Barplot of Types of Data Comfortable\nHaving\Storing Without Telling")
barplot(
values, col="dodgerblue3", ylab="Frequency", names.arg = names,
las=2, cex=.7
)
title("Barplot of Types of Data Comfortable\nHaving\Storing Without Telling")
barplot(
values, col="dodgerblue3", ylab="Frequency", names.arg = names,
las=2, cex=.7
)
title("Barplot of Types of Data Comfortable\nHaving\/Storing Without Telling")
barplot(
values, col="dodgerblue3", ylab="Frequency", names.arg = names,
las=2, cex.axis=.7
)
barplot(
values, col="dodgerblue3", ylab="Frequency", names.arg = names,
las=2, cex.axis=.1
)
barplot(
values, col="dodgerblue3", ylab="Frequency", names.arg = names,
las=2, cex.names = .7
)
title("Barplot of Types of Data Comfortable\nHaving\/Storing Without Telling")
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
?mtext
?strwrap
bp = barplot(
values, col="dodgerblue3", ylab="Frequency", names.arg = names,
las=2, cex.names = .7
)
bp
bp$width
names(bp)
barplot(
values, col="dodgerblue3", ylab="Frequency", names.arg = names,
las=2, cex.names = .7, width=.5
)
barplot(
values, col="dodgerblue3", ylab="Frequency", names.arg = names,
las=2, cex.names = .7, width=1
)
?strwrap
paste(names, collapse = "\n")
names = names %>%
flatmap(function(name) paste(name, collapse = "\n"))
names
names = c("Email/Password", "Personally Uploaded Pictures", "Pictures Uploaded by Friends", "Location During Use", "Location While Running in Background", "Personal Usage Trends Used by Company Itself", "Personal Usage Trends Sold to Third Parties", "All Cookies Stored on Computer", "Recently Visited Sites (Browser History)", "Other")
names = names %>%
flatmap(function(name) paste(name, collapse = "\n"))
processed = survdata$q5 %>%
flatmap(function(item) unbunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
values = table(processed)
# cols = c("dodgerblue", "deepskyblue3", "cyan4", "dodgerblue4", "mediumseagreen")
barplot(
values, col="dodgerblue3", ylab="Frequency", names.arg = names,
las=2, cex.names = .7
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
barplot(
values, col="dodgerblue3", ylab="Frequency", names.arg = names,
las=2, cex.names = .7, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names,
las=2, cex.names = .7, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
margin.table()
?margin.table
?oma
??oma
par(mar=(c(5,6,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names,
las=2, cex.names = .7, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
par(mar=(c(5,8,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names,
las=2, cex.names = .7, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
par(mar=(c(5,4,4,2)+.1))
par(mar=(c(5,9,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names,
las=2, cex.names = .7, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
par(mar=(c(5,4,4,2)+.1))
par(mar=(c(5,11,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names,
las=2, cex.names = .7, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
par(mar=(c(5,4,4,2)+.1))
names(values)
length(names(values))
names = c("Email/Password", "Personally Uploaded Pictures", "Pictures Uploaded by Friends", "Location During Use", "Location While Running in Background", "Personal Usage Trends Used by Company Itself", "Personal Usage Trends Sold to Third Parties", "All Cookies Stored on Computer", "Recently Visited Sites (Browser History)", "Other")
processed = survdata$q5 %>%
flatmap(function(item) unbunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
values = table(processed)
names(values)[10] = "Recently Visited Sites\n(Browser History)"
names(value)[7] = "Personal Usage Trends\nUsed by Company Itself"
names(value)[6] = "Personal Usage Trends Sold to Third Parties"
names(value)[4] = "Location While Running in Background"
names = c("Email/Password", "Personally Uploaded Pictures", "Pictures Uploaded by Friends", "Location During Use", "Location While Running in Background", "Personal Usage Trends Used by Company Itself", "Personal Usage Trends Sold to Third Parties", "All Cookies Stored on Computer", "Recently Visited Sites (Browser History)", "Other")
processed = survdata$q5 %>%
flatmap(function(item) unbunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
values = table(processed)
names(values)[10] = "Recently Visited Sites\n(Browser History)"
names(values)[7] = "Personal Usage Trends\nUsed by Company Itself"
names(values)[6] = "Personal Usage Trends\nSold to Third Parties"
names(values)[4] = "Location While Running\nin Background"
values
par(mar=(c(5,11,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names,
las=2, cex.names = .7, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
par(mar=(c(5,4,4,2)+.1))
names = c("Email/Password", "Personally Uploaded Pictures", "Pictures Uploaded by Friends", "Location During Use", "Location While Running in Background", "Personal Usage Trends Used by Company Itself", "Personal Usage Trends Sold to Third Parties", "All Cookies Stored on Computer", "Recently Visited Sites (Browser History)", "Other")
processed = survdata$q5 %>%
flatmap(function(item) unbunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
values = table(processed)
names(values)[10] = "Recently Visited Sites\n(Browser History)"
names(values)[7] = "Personal Usage Trends\nUsed by Company Itself"
names(values)[6] = "Personal Usage Trends\nSold to Third Parties"
names(values)[4] = "Location While Running\nin Background"
# cols = c("dodgerblue", "deepskyblue3", "cyan4", "dodgerblue4", "mediumseagreen")
par(mar=(c(5,11,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names(values),
las=2, cex.names = .7, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
par(mar=(c(5,4,4,2)+.1))
par(mar=(c(5,8,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names(values),
las=2, cex.names = .7, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
par(mar=(c(5,4,4,2)+.1))
par(mar=(c(5,9,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names(values),
las=2, cex.names = .7, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
par(mar=(c(5,4,4,2)+.1))
par(mar=(c(5,10,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names(values),
las=2, cex.names = .8, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
par(mar=(c(5,4,4,2)+.1))
par(mar=(c(5,11,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names(values),
las=2, cex.names = .8, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
par(mar=(c(5,4,4,2)+.1))
par(mar=(c(5,10.5,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names(values),
las=2, cex.names = .8, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
par(mar=(c(5,4,4,2)+.1))
par(mar=(c(5,10.5,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names(values),
las=2, cex.names = .75, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
par(mar=(c(5,4,4,2)+.1))
par(mar=(c(5,10,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names(values),
las=2, cex.names = .75, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
par(mar=(c(5,4,4,2)+.1))
names = c("Email/Password", "Personally Uploaded Pictures", "Pictures Uploaded by Friends", "Location During Use", "Location While Running in Background", "Personal Usage Trends Used by Company Itself", "Personal Usage Trends Sold to Third Parties", "All Cookies Stored on Computer", "Recently Visited Sites (Browser History)", "Other")
processed = survdata$q6 %>%
flatmap(function(item) unbunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
values = table(processed)
# par(mar=(c(5,10,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names(values),
las=2, cex.names = .75, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
names = c("Email/Password", "Personally Uploaded Pictures", "Pictures Uploaded by Friends", "Location During Use", "Location While Running in Background", "Personal Usage Trends Used by Company Itself", "Personal Usage Trends Sold to Third Parties", "All Cookies Stored on Computer", "Recently Visited Sites (Browser History)", "Other")
processed = survdata$q6 %>%
flatmap(function(item) unbunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
values = table(processed)
par(mar=(c(5,10,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names(values),
las=2, cex.names = .75, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing With Telling")
par(mar=(c(5,4,4,2)+.1))
names(values)
names = c("Email/Password", "Personally Uploaded Pictures", "Pictures Uploaded by Friends", "Location During Use", "Location While Running in Background", "Personal Usage Trends Used by Company Itself", "Personal Usage Trends Sold to Third Parties", "All Cookies Stored on Computer", "Recently Visited Sites (Browser History)", "Other")
processed = survdata$q5 %>%
flatmap(function(item) unbunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
values = table(processed)
names(values)
names = c("Email/Password", "Personally Uploaded Pictures", "Pictures Uploaded by Friends", "Location During Use", "Location While Running in Background", "Personal Usage Trends Used by Company Itself", "Personal Usage Trends Sold to Third Parties", "All Cookies Stored on Computer", "Recently Visited Sites (Browser History)", "Other")
processed = survdata$q6 %>%
flatmap(function(item) unbunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
values = table(processed)
names(values)[10] = "Recently Visited Sites\n(Browser History)"
names(values)[7] = "Personal Usage Trends\nUsed by Company Itself"
names(values)[6] = "Personal Usage Trends\nSold to Third Parties"
names(values)[4] = "Location While Running\nin Background"
names(values)[1] = "All Cookies Stored\non Computer"
par(mar=(c(5,10,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names(values),
las=2, cex.names = .75, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing With Telling")
par(mar=(c(5,4,4,2)+.1))
names(values)
names = c("Email/Password", "Personally Uploaded Pictures", "Pictures Uploaded by Friends", "Location During Use", "Location While Running in Background", "Personal Usage Trends Used by Company Itself", "Personal Usage Trends Sold to Third Parties", "All Cookies Stored on Computer", "Recently Visited Sites (Browser History)", "Other")
processed = survdata$q5 %>%
flatmap(function(item) unbunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
values = table(processed)
names(values)
names(values)[10] = "Recently Visited Sites\n(Browser History)"
names(values)[7] = "Personal Usage Trends\nUsed by Company Itself"
names(values)[6] = "Personal Usage Trends\nSold to Third Parties"
names(values)[4] = "Location While Running\nin Background"
names(values)[1] = "All Cookies Stored\non Computer"
par(mar=(c(5,10,4,2)+.1))
barplot(
values, col="dodgerblue3", xlab="Frequency", names.arg = names(values),
las=2, cex.names = .75, horiz = T
)
title("Barplot of Types of Data Comfortable\nHaving or Storing Without Telling")
par(mar=(c(5,4,4,2)+.1))
names = c("Email/Password", "Personally Uploaded Pictures", "Pictures Uploaded by Friends", "Location During Use", "Location While Running in Background", "Personal Usage Trends Used by Company Itself", "Personal Usage Trends Sold to Third Parties", "All Cookies Stored on Computer", "Recently Visited Sites (Browser History)", "Other")
processed = survdata$q6 %>%
flatmap(function(item) unbunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
values = table(processed)
names(values)
?diff
names = c("Email/Password", "Personally Uploaded Pictures", "Pictures Uploaded by Friends", "Location During Use", "Location While Running in Background", "Personal Usage Trends Used by Company Itself", "Personal Usage Trends Sold to Third Parties", "All Cookies Stored on Computer", "Recently Visited Sites (Browser History)", "Other")
processed = survdata$q6 %>%
flatmap(function(item) unbunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
values = table(processed)
names(values)
names = c("Email/Password", "Personally Uploaded Pictures", "Pictures Uploaded by Friends", "Location During Use", "Location While Running in Background", "Personal Usage Trends Used by Company Itself", "Personal Usage Trends Sold to Third Parties", "All Cookies Stored on Computer", "Recently Visited Sites (Browser History)", "Other")
processed = survdata$q5 %>%
flatmap(function(item) unbunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
values = table(processed)
names(values)
names = c("Email/Password", "Personally Uploaded Pictures", "Pictures Uploaded by Friends", "Location During Use", "Location While Running in Background", "Personal Usage Trends Used by Company Itself", "Personal Usage Trends Sold to Third Parties", "All Cookies Stored on Computer", "Recently Visited Sites (Browser History)", "Other")
processed = survdata$q6 %>%
flatmap(function(item) unbunch(item, ", ")) %>%
flatmap(function(item) processCategorical(item, names))
values = table(processed)
names(values)
values
filepath = "~/Documents/CODI/map=data/netprintlocations"
setwd(filepath)
# import needed libraries
library(rvest, quietly = T)
library(purrr, quietly = T)
library(ggmap, quietly = T)
# library(stringr)
netprintURL = "https://net-print.cit.cornell.edu/netprintx-cgi/qfeatures.cgi"
html = read_html(netprintURL)
rows = html %>%
html_noes("tr")
rows = html %>%
html_nodes("tr")
head(rows)
?html_nodes
cells = rows %>%
map(function(row) html_nodes(row, "td"))
head(cells)
rows = html %>%
html_nodes("tr")
cells = rows %>%
map(function(row) html_nodes(row, "td") %>%
flatmap(html_text))
head(cells)
cells[[1]]
cells[[2]]
head(unlist(cells))
unlist(cells)
head(cells)
cells[[1:5]] %>%
flatmap(print(.))
cells[[1:5]]
cells[[2:5]]
cells[1:5
]
cells[1:5] %>%
flatmap(print(.))
cells[1:5] %>%
map(function(row) {
flatmap(print(.))
})
cells[1:5] %>%
map(function(row) flatmap(row, function(elem) print(elem)))
cells[1:5] %>%
map(function(row) flatmap(row, function(elem) paste(elem)))
cells[1:5] %>%
map(function(row) flatmap(row, function(elem) typeof(elem)))
cells[1:5] %>%
map(function(row) flatmap(row, function(elem) class(elem)))
cells = rows %>%
flatmap(function(row) html_nodes(row, "td") %>%
flatmap(html_text))
head(cells)
cells = rows %>%
map(function(row) html_nodes(row, "td") %>%
flatmap(html_text))
head(cells)
cells = rows %>%
map(function(row) html_nodes(row, "td") %>%
flatmap(html_text)) %>%
unlist
head(Cells)
head(cells)
cells
1295/7
matrix_cells = matrix(data = cells, nrow = 185, ncol = 7)
head(matrix_cells)
matrix_cells
dim(matrix_cells)
cellframe = data.frame(matrix_cells)
colnames(cellframe) = c("Queue Name", "Printer Name", "Printer Model", "Color", "¢/Pg", "DPI", "Duplex")
head(cellframe)
cellframe
cellframe[1:5]
dim(cellframe)
names(cellframe)
head(cellframe$`Queue Name`)
cells = rows %>%
map(function(row) html_nodes(row, "td") %>%
flatmap(html_text))
matrix_cells = matrix(data = cells, nrow = 185, ncol = 7)
head(cells)
cells[1:5] %>%
map(paste)
cells[1:5] %>%
flatmap(paste)
cells[1:5] %>%
map(function(row) flatmap(row, function(elem) paste(elem)))
cells[1:5] %>%
map(function(row) flatmap(row, function(elem) paste(elem, "wee")))
cellframe = data.frame(
Queue_Name = c(),
Printer_Name = c(),
Printer_Model = c(),
Color = c(),
price_per_page = c(),
DPI = c(),
Duplex = c()
)
cells[1:5] %>%
map(function(row) {
rbind(cellframe, unlist(row))
})
cells[1:5] %>%
map(function(row) {
cellframe = rbind(cellframe, unlist(row))
})
cellframe
length(cells)
for (i in 2:(length(cells))) {
cellframe = rbind(cellframe, cells[i])
}
warnings()
cellframe = data.frame(
Queue_Name = c(),
Printer_Name = c(),
Printer_Model = c(),
Color = c(),
price_per_page = c(),
DPI = c(),
Duplex = c(),
stringsAsFactors = F
)
for (i in 2:(length(cells))) {
cellframe = rbind(cellframe, cells[i])
}
head(cellframe)
dim(cellframe)
cells[2]
unlist(cells[2])
cellframe = data.frame(
Queue_Name = c(),
Printer_Name = c(),
Printer_Model = c(),
Color = c(),
price_per_page = c(),
DPI = c(),
Duplex = c(),
stringsAsFactors = F
)
for (i in 2:(length(cells))) {
cellframe = rbind(cellframe, unlist(cells[i]))
}
head(cellframe)
unlist(cells[2])
unlist(cells[3])
dim(cellframe)
cellframe
for (i in 1:5) {}
;
for (i in 1:5) { unlist(cells[i]) }
for (i in 1:5) { paste(unlist(cells[i])) }
for (i in 1:5) { print(unlist(cells[i])) }
for (i in 2:5) { print(unlist(cells[i])) }
test = matrix(cells, 185, 6)
cells = rows %>%
map(function(row) html_nodes(row, "td") %>%
flatmap(html_text)) %>%
unlist
test = matrix(cells, 185, 6)
head(cells)
cells[1:10]
cells = rows %>%
map(function(row) html_nodes(row, "td") %>%
flatmap(html_text))
cellframe = data.frame(
Queue_Name = c(),
Printer_Name = c(),
Printer_Model = c(),
Color = c(),
DPI = c(),
Duplex = c(),
stringsAsFactors = F
)
cellframe = rbind(cellframe, unlist(cells[2]))
cellframe
?rbind
cbind(cellframe, unlist(cells[2]))
cellframe
cellframe = rbind(cellframe, unlist(cells[3]))
cellframe
filepath = "~/Documents/CODI/map-data/netprintlocations"
setwd(filepath)
netprint = read.csv("netprints.csv")
netprint = read.csv("netprints.csv")
netprint = read.csv("netprints.csv")
head(netprint)
netprint$Printer.Name
